"use strict";
exports.__esModule = true;
var express_1 = require("express");
var User_action_aws_1 = require("../database_AWs/User_action_aws");
var Middel_session_1 = require("../middleware/Middel_session");
var User_controller_1 = require("../Controllers/User_controller");
var Bucket_controller_1 = require("../Controllers/Bucket_controller");
var Mail_controllers_1 = require("../Controllers/Mail_controllers");
var Chart_controller_1 = require("../Controllers/Chart_controller");
var router = express_1["default"].Router();
var model = new User_action_aws_1.upload_to_aws("", "", null);
router.post('/createaccount', User_controller_1.createaccount);
router.post('/login', User_controller_1.login);
router.get("/get_buckets_data", Middel_session_1.Verified_authorization, Bucket_controller_1.get_bucket_data);
router.post('/createfolder', Middel_session_1.Verified_authorization, Bucket_controller_1.create_folder);
router.post('/sendmail', Middel_session_1.Verified_authorization, Mail_controllers_1.send_mail);
router.get('/user_info', Middel_session_1.Verified_authorization, User_controller_1.get_user_info);
router.post('/Deletefiles', Middel_session_1.Verified_authorization, Bucket_controller_1.Delete_file);
router.post('/renamefile', Middel_session_1.Verified_authorization, Bucket_controller_1.rename_file);
router.post('/verifyfolder', Middel_session_1.Verified_authorization, Bucket_controller_1.verifie_folder_exist);
router.post('/zipedfiles', Middel_session_1.Verified_authorization, Bucket_controller_1.Zip_Files);
router.get('/chart_user', Middel_session_1.Verified_authorization, Chart_controller_1.Chart_Data);
router.get('/tokenverification', Middel_session_1.Verified_authorization);
router.post('/deletegroup', Middel_session_1.Verified_authorization, User_controller_1.removegroup);
router.get('/groups', Middel_session_1.Verified_authorization, User_controller_1.get_all_group);
router.get('/userbyemail', Middel_session_1.Verified_authorization, User_controller_1.get_other_user_info_by_email);
router.get('/userexist', Middel_session_1.Verified_authorization, User_controller_1.user_exist);
router.get('/groupexist', Middel_session_1.Verified_authorization, User_controller_1.group_exist);
router.post('/renamegroup', Middel_session_1.Verified_authorization, User_controller_1.rename_group);
router.post('/acceptinvitaion', Middel_session_1.Verified_authorization, User_controller_1.accept_inviation);
exports["default"] = router;
